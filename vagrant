# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.
  
  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "generic/debian10"
  config.vm.hostname = "server"
  config.vm.define "server"
  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
   config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.1.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  #config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
   config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
     vb.memory = "1024"
   end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
   config.vm.provision "shell", inline: <<-SHELL
  sudo  apt-get update
  host='hostname'
if [ "$host"="server" ]; then
echo "server located"
#Packets
sudo apt-get install php-gd php-bcmath php-mbstring php-xml php-ldap php-json php-mysql php-curl php-cgi php libapache2-mod-php -y && sudo apt-get install apache2 && sudo apt-get install mariadb-server mariadb-client -y 

sudo systemctl start apache2

#DATABASE
sudo systemctl start mariadb
sudo systemctl enable mariadb

mysql_secure_installation <<EOF

n
y
y
y
y
EOF

sudo mysql -u root -e "create database zabbix character set utf8 collate utf8_bin;"
sudo mysql -u root -e "create user 'zabbix'@localhost identified by '123456';"
sudo mysql -u root -e "GRANT ALL PRIVILEGES ON zabbix.* TO 'zabbix'@localhost;"
sudo mysql -u root -e "FLUSH PRIVILEGES;"

#install zabbix
wget -P /tmp https://repo.zabbix.com/zabbix/5.2/debian/pool/main/z/zabbix-release/zabbix-release_5.2-1+debian10_all.deb
sudo dpkg -i /tmp/zabbix-release_5.2-1+debian10_all.deb
rm /tmp/zabbix-release_5.2-1+debian10_all.deb
sudo apt-get update
sudo apt-get install zabbix-server-mysql zabbix-frontend-php zabbix-apache-conf zabbix-agent -y

sudo zcat /usr/share/doc/zabbix-server-mysql/create.sql.gz | mysql -uzabbix -p'123456' zabbix 

#Zabbix config
sed -i "/\# DBHost=/c DBHost=localhost" /etc/zabbix/zabbix_server.conf
sed -i "/DBHost=/c DBHost=localhost" /etc/zabbix/zabbix_server.conf
sed -i "/\# DBName=/d" /etc/zabbix/zabbix_server.conf
sed -i "/DBName=/c DBName=zabbix" /etc/zabbix/zabbix_server.conf
sed -i "/\# DBUser=/d" /etc/zabbix/zabbix_server.conf
sed -i "/DBUser=/c DBUser=zabbix" /etc/zabbix/zabbix_server.conf
sed -i "/\# DBPassword=/c DBPassword=123456" /etc/zabbix/zabbix_server.conf
sed -i "/DBPassword=/c DBPassword=123456" /etc/zabbix/zabbix_server.conf

#Apache config
sed -i "/\# php_value date.timezone/c \ \ \ \ \ \ \php_value date.timezone Europe.Minsk" /etc/zabbix/apache.conf

sudo systemctl restart apache2 mariadb

sudo systemctl start zabbix-server zabbix-agent
sudo systemctl enable zabbix-server zabbix-agent
else
echo "Not found access hostname"
fi
   SHELL
end
